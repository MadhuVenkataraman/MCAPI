/*
 * Membership APIs
 *
 * To search, enroll, perform benefit selection and view all the eligibile benefits
 *
 * OpenAPI spec version: 1.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace IO.Swagger.Models
{
    /// <summary>
    /// 
    /// </summary>
    [DataContract]
    public partial class MemberInfo :  IEquatable<MemberInfo>
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="MemberInfo" /> class.
        /// </summary>
        /// <param name="MemberToken">MemberToken (required).</param>
        /// <param name="Title">Title.</param>
        /// <param name="Suffix">Suffix.</param>
        /// <param name="FirstName">FirstName.</param>
        /// <param name="MiddleName">MiddleName.</param>
        /// <param name="LastName">LastName.</param>
        /// <param name="Salutation">Salutation.</param>
        /// <param name="DOB">DOB.</param>
        /// <param name="EmailAddress">EmailAddress.</param>
        /// <param name="CardNumber">CardNumber.</param>
        /// <param name="ExpirationDate">ExpirationDate.</param>
        /// <param name="NameonCard">NameonCard.</param>
        /// <param name="NationalID">NationalID.</param>
        /// <param name="MailingName1">MailingName1.</param>
        /// <param name="MailingAddress1">MailingAddress1.</param>
        /// <param name="MailingAddress2">MailingAddress2.</param>
        /// <param name="MailingAddress3">MailingAddress3.</param>
        /// <param name="City">City.</param>
        /// <param name="County">County.</param>
        /// <param name="Country">Country.</param>
        /// <param name="PostalCode">PostalCode.</param>
        /// <param name="Language">Language.</param>
        /// <param name="HomePhoneNumber">HomePhoneNumber.</param>
        /// <param name="MobilePhoneNumber">MobilePhoneNumber.</param>
        /// <param name="SuppressAllMailFlag">SuppressAllMailFlag.</param>
        /// <param name="SuppressMailFlag">SuppressMailFlag.</param>
        /// <param name="SuppressAllEmailFlag">SuppressAllEmailFlag.</param>
        /// <param name="SuppressEmailFlag">SuppressEmailFlag.</param>
        /// <param name="IsPrimary">IsPrimary.</param>
        /// <param name="IsDeceased">IsDeceased.</param>
        /// <param name="Gender">Gender.</param>
        /// <param name="CatalogId">CatalogId.</param>
        /// <param name="BankAccountId">BankAccountId.</param>
        /// <param name="BankAccountNumber">BankAccountNumber.</param>
        /// <param name="SortCode">SortCode.</param>
        /// <param name="IBAN">IBAN.</param>
        /// <param name="BIC">BIC.</param>
        /// <param name="AccountType">AccountType.</param>
        /// <param name="JoinDate">JoinDate.</param>
        /// <param name="CancelReason">CancelReason.</param>
        /// <param name="ClosedDate">ClosedDate.</param>
        public MemberInfo(string MemberToken = null, string Title = null, string Suffix = null, string FirstName = null, string MiddleName = null, string LastName = null, string Salutation = null, DateTime? DOB = null, string EmailAddress = null, string CardNumber = null, DateTime? ExpirationDate = null, string NameonCard = null, string NationalID = null, string MailingName1 = null, string MailingAddress1 = null, string MailingAddress2 = null, string MailingAddress3 = null, string City = null, string County = null, string Country = null, string PostalCode = null, string Language = null, string HomePhoneNumber = null, string MobilePhoneNumber = null, bool? SuppressAllMailFlag = null, bool? SuppressMailFlag = null, bool? SuppressAllEmailFlag = null, bool? SuppressEmailFlag = null, bool? IsPrimary = null, bool? IsDeceased = null, string Gender = null, string CatalogId = null, string BankAccountId = null, string BankAccountNumber = null, string SortCode = null, string IBAN = null, string BIC = null, string AccountType = null, DateTime? JoinDate = null, string CancelReason = null, DateTime? ClosedDate = null)
        {
            // to ensure "MemberToken" is required (not null)
            if (MemberToken == null)
            {
                throw new InvalidDataException("MemberToken is a required property for MemberInfo and cannot be null");
            }
            else
            {
                this.MemberToken = MemberToken;
            }
            this.Title = Title;
            this.Suffix = Suffix;
            this.FirstName = FirstName;
            this.MiddleName = MiddleName;
            this.LastName = LastName;
            this.Salutation = Salutation;
            this.DOB = DOB;
            this.EmailAddress = EmailAddress;
            this.CardNumber = CardNumber;
            this.ExpirationDate = ExpirationDate;
            this.NameonCard = NameonCard;
            this.NationalID = NationalID;
            this.MailingName1 = MailingName1;
            this.MailingAddress1 = MailingAddress1;
            this.MailingAddress2 = MailingAddress2;
            this.MailingAddress3 = MailingAddress3;
            this.City = City;
            this.County = County;
            this.Country = Country;
            this.PostalCode = PostalCode;
            this.Language = Language;
            this.HomePhoneNumber = HomePhoneNumber;
            this.MobilePhoneNumber = MobilePhoneNumber;
            this.SuppressAllMailFlag = SuppressAllMailFlag;
            this.SuppressMailFlag = SuppressMailFlag;
            this.SuppressAllEmailFlag = SuppressAllEmailFlag;
            this.SuppressEmailFlag = SuppressEmailFlag;
            this.IsPrimary = IsPrimary;
            this.IsDeceased = IsDeceased;
            this.Gender = Gender;
            this.CatalogId = CatalogId;
            this.BankAccountId = BankAccountId;
            this.BankAccountNumber = BankAccountNumber;
            this.SortCode = SortCode;
            this.IBAN = IBAN;
            this.BIC = BIC;
            this.AccountType = AccountType;
            this.JoinDate = JoinDate;
            this.CancelReason = CancelReason;
            this.ClosedDate = ClosedDate;
            
        }

        /// <summary>
        /// Gets or Sets MemberToken
        /// </summary>
        [DataMember(Name="memberToken")]
        public string MemberToken { get; set; }

        /// <summary>
        /// Gets or Sets Title
        /// </summary>
        [DataMember(Name="title")]
        public string Title { get; set; }

        /// <summary>
        /// Gets or Sets Suffix
        /// </summary>
        [DataMember(Name="suffix")]
        public string Suffix { get; set; }

        /// <summary>
        /// Gets or Sets FirstName
        /// </summary>
        [DataMember(Name="firstName")]
        public string FirstName { get; set; }

        /// <summary>
        /// Gets or Sets MiddleName
        /// </summary>
        [DataMember(Name="middleName")]
        public string MiddleName { get; set; }

        /// <summary>
        /// Gets or Sets LastName
        /// </summary>
        [DataMember(Name="lastName")]
        public string LastName { get; set; }

        /// <summary>
        /// Gets or Sets Salutation
        /// </summary>
        [DataMember(Name="salutation")]
        public string Salutation { get; set; }

        /// <summary>
        /// Gets or Sets DOB
        /// </summary>
        [DataMember(Name="DOB")]
        public DateTime? DOB { get; set; }

        /// <summary>
        /// Gets or Sets EmailAddress
        /// </summary>
        [DataMember(Name="emailAddress")]
        public string EmailAddress { get; set; }

        /// <summary>
        /// Gets or Sets CardNumber
        /// </summary>
        [DataMember(Name="cardNumber")]
        public string CardNumber { get; set; }

        /// <summary>
        /// Gets or Sets ExpirationDate
        /// </summary>
        [DataMember(Name="expirationDate")]
        public DateTime? ExpirationDate { get; set; }

        /// <summary>
        /// Gets or Sets NameonCard
        /// </summary>
        [DataMember(Name="NameonCard")]
        public string NameonCard { get; set; }

        /// <summary>
        /// Gets or Sets NationalID
        /// </summary>
        [DataMember(Name="NationalID")]
        public string NationalID { get; set; }

        /// <summary>
        /// Gets or Sets MailingName1
        /// </summary>
        [DataMember(Name="MailingName1")]
        public string MailingName1 { get; set; }

        /// <summary>
        /// Gets or Sets MailingAddress1
        /// </summary>
        [DataMember(Name="MailingAddress1")]
        public string MailingAddress1 { get; set; }

        /// <summary>
        /// Gets or Sets MailingAddress2
        /// </summary>
        [DataMember(Name="MailingAddress2")]
        public string MailingAddress2 { get; set; }

        /// <summary>
        /// Gets or Sets MailingAddress3
        /// </summary>
        [DataMember(Name="MailingAddress3")]
        public string MailingAddress3 { get; set; }

        /// <summary>
        /// Gets or Sets City
        /// </summary>
        [DataMember(Name="City")]
        public string City { get; set; }

        /// <summary>
        /// Gets or Sets County
        /// </summary>
        [DataMember(Name="County")]
        public string County { get; set; }

        /// <summary>
        /// Gets or Sets Country
        /// </summary>
        [DataMember(Name="Country")]
        public string Country { get; set; }

        /// <summary>
        /// Gets or Sets PostalCode
        /// </summary>
        [DataMember(Name="PostalCode")]
        public string PostalCode { get; set; }

        /// <summary>
        /// Gets or Sets Language
        /// </summary>
        [DataMember(Name="Language")]
        public string Language { get; set; }

        /// <summary>
        /// Gets or Sets HomePhoneNumber
        /// </summary>
        [DataMember(Name="HomePhoneNumber")]
        public string HomePhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets MobilePhoneNumber
        /// </summary>
        [DataMember(Name="MobilePhoneNumber")]
        public string MobilePhoneNumber { get; set; }

        /// <summary>
        /// Gets or Sets SuppressAllMailFlag
        /// </summary>
        [DataMember(Name="SuppressAllMailFlag")]
        public bool? SuppressAllMailFlag { get; set; }

        /// <summary>
        /// Gets or Sets SuppressMailFlag
        /// </summary>
        [DataMember(Name="SuppressMailFlag")]
        public bool? SuppressMailFlag { get; set; }

        /// <summary>
        /// Gets or Sets SuppressAllEmailFlag
        /// </summary>
        [DataMember(Name="SuppressAllEmailFlag")]
        public bool? SuppressAllEmailFlag { get; set; }

        /// <summary>
        /// Gets or Sets SuppressEmailFlag
        /// </summary>
        [DataMember(Name="SuppressEmailFlag")]
        public bool? SuppressEmailFlag { get; set; }

        /// <summary>
        /// Gets or Sets IsPrimary
        /// </summary>
        [DataMember(Name="IsPrimary")]
        public bool? IsPrimary { get; set; }

        /// <summary>
        /// Gets or Sets IsDeceased
        /// </summary>
        [DataMember(Name="IsDeceased")]
        public bool? IsDeceased { get; set; }

        /// <summary>
        /// Gets or Sets Gender
        /// </summary>
        [DataMember(Name="Gender")]
        public string Gender { get; set; }

        /// <summary>
        /// Gets or Sets CatalogId
        /// </summary>
        [DataMember(Name="CatalogId")]
        public string CatalogId { get; set; }

        /// <summary>
        /// Gets or Sets BankAccountId
        /// </summary>
        [DataMember(Name="BankAccountId")]
        public string BankAccountId { get; set; }

        /// <summary>
        /// Gets or Sets BankAccountNumber
        /// </summary>
        [DataMember(Name="BankAccountNumber")]
        public string BankAccountNumber { get; set; }

        /// <summary>
        /// Gets or Sets SortCode
        /// </summary>
        [DataMember(Name="SortCode")]
        public string SortCode { get; set; }

        /// <summary>
        /// Gets or Sets IBAN
        /// </summary>
        [DataMember(Name="IBAN")]
        public string IBAN { get; set; }

        /// <summary>
        /// Gets or Sets BIC
        /// </summary>
        [DataMember(Name="BIC")]
        public string BIC { get; set; }

        /// <summary>
        /// Gets or Sets AccountType
        /// </summary>
        [DataMember(Name="AccountType")]
        public string AccountType { get; set; }

        /// <summary>
        /// Gets or Sets JoinDate
        /// </summary>
        [DataMember(Name="JoinDate")]
        public DateTime? JoinDate { get; set; }

        /// <summary>
        /// Gets or Sets CancelReason
        /// </summary>
        [DataMember(Name="CancelReason")]
        public string CancelReason { get; set; }

        /// <summary>
        /// Gets or Sets ClosedDate
        /// </summary>
        [DataMember(Name="ClosedDate")]
        public DateTime? ClosedDate { get; set; }


        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class MemberInfo {\n");
            sb.Append("  MemberToken: ").Append(MemberToken).Append("\n");
            sb.Append("  Title: ").Append(Title).Append("\n");
            sb.Append("  Suffix: ").Append(Suffix).Append("\n");
            sb.Append("  FirstName: ").Append(FirstName).Append("\n");
            sb.Append("  MiddleName: ").Append(MiddleName).Append("\n");
            sb.Append("  LastName: ").Append(LastName).Append("\n");
            sb.Append("  Salutation: ").Append(Salutation).Append("\n");
            sb.Append("  DOB: ").Append(DOB).Append("\n");
            sb.Append("  EmailAddress: ").Append(EmailAddress).Append("\n");
            sb.Append("  CardNumber: ").Append(CardNumber).Append("\n");
            sb.Append("  ExpirationDate: ").Append(ExpirationDate).Append("\n");
            sb.Append("  NameonCard: ").Append(NameonCard).Append("\n");
            sb.Append("  NationalID: ").Append(NationalID).Append("\n");
            sb.Append("  MailingName1: ").Append(MailingName1).Append("\n");
            sb.Append("  MailingAddress1: ").Append(MailingAddress1).Append("\n");
            sb.Append("  MailingAddress2: ").Append(MailingAddress2).Append("\n");
            sb.Append("  MailingAddress3: ").Append(MailingAddress3).Append("\n");
            sb.Append("  City: ").Append(City).Append("\n");
            sb.Append("  County: ").Append(County).Append("\n");
            sb.Append("  Country: ").Append(Country).Append("\n");
            sb.Append("  PostalCode: ").Append(PostalCode).Append("\n");
            sb.Append("  Language: ").Append(Language).Append("\n");
            sb.Append("  HomePhoneNumber: ").Append(HomePhoneNumber).Append("\n");
            sb.Append("  MobilePhoneNumber: ").Append(MobilePhoneNumber).Append("\n");
            sb.Append("  SuppressAllMailFlag: ").Append(SuppressAllMailFlag).Append("\n");
            sb.Append("  SuppressMailFlag: ").Append(SuppressMailFlag).Append("\n");
            sb.Append("  SuppressAllEmailFlag: ").Append(SuppressAllEmailFlag).Append("\n");
            sb.Append("  SuppressEmailFlag: ").Append(SuppressEmailFlag).Append("\n");
            sb.Append("  IsPrimary: ").Append(IsPrimary).Append("\n");
            sb.Append("  IsDeceased: ").Append(IsDeceased).Append("\n");
            sb.Append("  Gender: ").Append(Gender).Append("\n");
            sb.Append("  CatalogId: ").Append(CatalogId).Append("\n");
            sb.Append("  BankAccountId: ").Append(BankAccountId).Append("\n");
            sb.Append("  BankAccountNumber: ").Append(BankAccountNumber).Append("\n");
            sb.Append("  SortCode: ").Append(SortCode).Append("\n");
            sb.Append("  IBAN: ").Append(IBAN).Append("\n");
            sb.Append("  BIC: ").Append(BIC).Append("\n");
            sb.Append("  AccountType: ").Append(AccountType).Append("\n");
            sb.Append("  JoinDate: ").Append(JoinDate).Append("\n");
            sb.Append("  CancelReason: ").Append(CancelReason).Append("\n");
            sb.Append("  ClosedDate: ").Append(ClosedDate).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            if (obj.GetType() != GetType()) return false;
            return Equals((MemberInfo)obj);
        }

        /// <summary>
        /// Returns true if MemberInfo instances are equal
        /// </summary>
        /// <param name="other">Instance of MemberInfo to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(MemberInfo other)
        {

            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return 
                (
                    this.MemberToken == other.MemberToken ||
                    this.MemberToken != null &&
                    this.MemberToken.Equals(other.MemberToken)
                ) && 
                (
                    this.Title == other.Title ||
                    this.Title != null &&
                    this.Title.Equals(other.Title)
                ) && 
                (
                    this.Suffix == other.Suffix ||
                    this.Suffix != null &&
                    this.Suffix.Equals(other.Suffix)
                ) && 
                (
                    this.FirstName == other.FirstName ||
                    this.FirstName != null &&
                    this.FirstName.Equals(other.FirstName)
                ) && 
                (
                    this.MiddleName == other.MiddleName ||
                    this.MiddleName != null &&
                    this.MiddleName.Equals(other.MiddleName)
                ) && 
                (
                    this.LastName == other.LastName ||
                    this.LastName != null &&
                    this.LastName.Equals(other.LastName)
                ) && 
                (
                    this.Salutation == other.Salutation ||
                    this.Salutation != null &&
                    this.Salutation.Equals(other.Salutation)
                ) && 
                (
                    this.DOB == other.DOB ||
                    this.DOB != null &&
                    this.DOB.Equals(other.DOB)
                ) && 
                (
                    this.EmailAddress == other.EmailAddress ||
                    this.EmailAddress != null &&
                    this.EmailAddress.Equals(other.EmailAddress)
                ) && 
                (
                    this.CardNumber == other.CardNumber ||
                    this.CardNumber != null &&
                    this.CardNumber.Equals(other.CardNumber)
                ) && 
                (
                    this.ExpirationDate == other.ExpirationDate ||
                    this.ExpirationDate != null &&
                    this.ExpirationDate.Equals(other.ExpirationDate)
                ) && 
                (
                    this.NameonCard == other.NameonCard ||
                    this.NameonCard != null &&
                    this.NameonCard.Equals(other.NameonCard)
                ) && 
                (
                    this.NationalID == other.NationalID ||
                    this.NationalID != null &&
                    this.NationalID.Equals(other.NationalID)
                ) && 
                (
                    this.MailingName1 == other.MailingName1 ||
                    this.MailingName1 != null &&
                    this.MailingName1.Equals(other.MailingName1)
                ) && 
                (
                    this.MailingAddress1 == other.MailingAddress1 ||
                    this.MailingAddress1 != null &&
                    this.MailingAddress1.Equals(other.MailingAddress1)
                ) && 
                (
                    this.MailingAddress2 == other.MailingAddress2 ||
                    this.MailingAddress2 != null &&
                    this.MailingAddress2.Equals(other.MailingAddress2)
                ) && 
                (
                    this.MailingAddress3 == other.MailingAddress3 ||
                    this.MailingAddress3 != null &&
                    this.MailingAddress3.Equals(other.MailingAddress3)
                ) && 
                (
                    this.City == other.City ||
                    this.City != null &&
                    this.City.Equals(other.City)
                ) && 
                (
                    this.County == other.County ||
                    this.County != null &&
                    this.County.Equals(other.County)
                ) && 
                (
                    this.Country == other.Country ||
                    this.Country != null &&
                    this.Country.Equals(other.Country)
                ) && 
                (
                    this.PostalCode == other.PostalCode ||
                    this.PostalCode != null &&
                    this.PostalCode.Equals(other.PostalCode)
                ) && 
                (
                    this.Language == other.Language ||
                    this.Language != null &&
                    this.Language.Equals(other.Language)
                ) && 
                (
                    this.HomePhoneNumber == other.HomePhoneNumber ||
                    this.HomePhoneNumber != null &&
                    this.HomePhoneNumber.Equals(other.HomePhoneNumber)
                ) && 
                (
                    this.MobilePhoneNumber == other.MobilePhoneNumber ||
                    this.MobilePhoneNumber != null &&
                    this.MobilePhoneNumber.Equals(other.MobilePhoneNumber)
                ) && 
                (
                    this.SuppressAllMailFlag == other.SuppressAllMailFlag ||
                    this.SuppressAllMailFlag != null &&
                    this.SuppressAllMailFlag.Equals(other.SuppressAllMailFlag)
                ) && 
                (
                    this.SuppressMailFlag == other.SuppressMailFlag ||
                    this.SuppressMailFlag != null &&
                    this.SuppressMailFlag.Equals(other.SuppressMailFlag)
                ) && 
                (
                    this.SuppressAllEmailFlag == other.SuppressAllEmailFlag ||
                    this.SuppressAllEmailFlag != null &&
                    this.SuppressAllEmailFlag.Equals(other.SuppressAllEmailFlag)
                ) && 
                (
                    this.SuppressEmailFlag == other.SuppressEmailFlag ||
                    this.SuppressEmailFlag != null &&
                    this.SuppressEmailFlag.Equals(other.SuppressEmailFlag)
                ) && 
                (
                    this.IsPrimary == other.IsPrimary ||
                    this.IsPrimary != null &&
                    this.IsPrimary.Equals(other.IsPrimary)
                ) && 
                (
                    this.IsDeceased == other.IsDeceased ||
                    this.IsDeceased != null &&
                    this.IsDeceased.Equals(other.IsDeceased)
                ) && 
                (
                    this.Gender == other.Gender ||
                    this.Gender != null &&
                    this.Gender.Equals(other.Gender)
                ) && 
                (
                    this.CatalogId == other.CatalogId ||
                    this.CatalogId != null &&
                    this.CatalogId.Equals(other.CatalogId)
                ) && 
                (
                    this.BankAccountId == other.BankAccountId ||
                    this.BankAccountId != null &&
                    this.BankAccountId.Equals(other.BankAccountId)
                ) && 
                (
                    this.BankAccountNumber == other.BankAccountNumber ||
                    this.BankAccountNumber != null &&
                    this.BankAccountNumber.Equals(other.BankAccountNumber)
                ) && 
                (
                    this.SortCode == other.SortCode ||
                    this.SortCode != null &&
                    this.SortCode.Equals(other.SortCode)
                ) && 
                (
                    this.IBAN == other.IBAN ||
                    this.IBAN != null &&
                    this.IBAN.Equals(other.IBAN)
                ) && 
                (
                    this.BIC == other.BIC ||
                    this.BIC != null &&
                    this.BIC.Equals(other.BIC)
                ) && 
                (
                    this.AccountType == other.AccountType ||
                    this.AccountType != null &&
                    this.AccountType.Equals(other.AccountType)
                ) && 
                (
                    this.JoinDate == other.JoinDate ||
                    this.JoinDate != null &&
                    this.JoinDate.Equals(other.JoinDate)
                ) && 
                (
                    this.CancelReason == other.CancelReason ||
                    this.CancelReason != null &&
                    this.CancelReason.Equals(other.CancelReason)
                ) && 
                (
                    this.ClosedDate == other.ClosedDate ||
                    this.ClosedDate != null &&
                    this.ClosedDate.Equals(other.ClosedDate)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            // credit: http://stackoverflow.com/a/263416/677735
            unchecked // Overflow is fine, just wrap
            {
                int hash = 41;
                // Suitable nullity checks etc, of course :)
                if (this.MemberToken != null)
                    hash = hash * 59 + this.MemberToken.GetHashCode();
                if (this.Title != null)
                    hash = hash * 59 + this.Title.GetHashCode();
                if (this.Suffix != null)
                    hash = hash * 59 + this.Suffix.GetHashCode();
                if (this.FirstName != null)
                    hash = hash * 59 + this.FirstName.GetHashCode();
                if (this.MiddleName != null)
                    hash = hash * 59 + this.MiddleName.GetHashCode();
                if (this.LastName != null)
                    hash = hash * 59 + this.LastName.GetHashCode();
                if (this.Salutation != null)
                    hash = hash * 59 + this.Salutation.GetHashCode();
                if (this.DOB != null)
                    hash = hash * 59 + this.DOB.GetHashCode();
                if (this.EmailAddress != null)
                    hash = hash * 59 + this.EmailAddress.GetHashCode();
                if (this.CardNumber != null)
                    hash = hash * 59 + this.CardNumber.GetHashCode();
                if (this.ExpirationDate != null)
                    hash = hash * 59 + this.ExpirationDate.GetHashCode();
                if (this.NameonCard != null)
                    hash = hash * 59 + this.NameonCard.GetHashCode();
                if (this.NationalID != null)
                    hash = hash * 59 + this.NationalID.GetHashCode();
                if (this.MailingName1 != null)
                    hash = hash * 59 + this.MailingName1.GetHashCode();
                if (this.MailingAddress1 != null)
                    hash = hash * 59 + this.MailingAddress1.GetHashCode();
                if (this.MailingAddress2 != null)
                    hash = hash * 59 + this.MailingAddress2.GetHashCode();
                if (this.MailingAddress3 != null)
                    hash = hash * 59 + this.MailingAddress3.GetHashCode();
                if (this.City != null)
                    hash = hash * 59 + this.City.GetHashCode();
                if (this.County != null)
                    hash = hash * 59 + this.County.GetHashCode();
                if (this.Country != null)
                    hash = hash * 59 + this.Country.GetHashCode();
                if (this.PostalCode != null)
                    hash = hash * 59 + this.PostalCode.GetHashCode();
                if (this.Language != null)
                    hash = hash * 59 + this.Language.GetHashCode();
                if (this.HomePhoneNumber != null)
                    hash = hash * 59 + this.HomePhoneNumber.GetHashCode();
                if (this.MobilePhoneNumber != null)
                    hash = hash * 59 + this.MobilePhoneNumber.GetHashCode();
                if (this.SuppressAllMailFlag != null)
                    hash = hash * 59 + this.SuppressAllMailFlag.GetHashCode();
                if (this.SuppressMailFlag != null)
                    hash = hash * 59 + this.SuppressMailFlag.GetHashCode();
                if (this.SuppressAllEmailFlag != null)
                    hash = hash * 59 + this.SuppressAllEmailFlag.GetHashCode();
                if (this.SuppressEmailFlag != null)
                    hash = hash * 59 + this.SuppressEmailFlag.GetHashCode();
                if (this.IsPrimary != null)
                    hash = hash * 59 + this.IsPrimary.GetHashCode();
                if (this.IsDeceased != null)
                    hash = hash * 59 + this.IsDeceased.GetHashCode();
                if (this.Gender != null)
                    hash = hash * 59 + this.Gender.GetHashCode();
                if (this.CatalogId != null)
                    hash = hash * 59 + this.CatalogId.GetHashCode();
                if (this.BankAccountId != null)
                    hash = hash * 59 + this.BankAccountId.GetHashCode();
                if (this.BankAccountNumber != null)
                    hash = hash * 59 + this.BankAccountNumber.GetHashCode();
                if (this.SortCode != null)
                    hash = hash * 59 + this.SortCode.GetHashCode();
                if (this.IBAN != null)
                    hash = hash * 59 + this.IBAN.GetHashCode();
                if (this.BIC != null)
                    hash = hash * 59 + this.BIC.GetHashCode();
                if (this.AccountType != null)
                    hash = hash * 59 + this.AccountType.GetHashCode();
                if (this.JoinDate != null)
                    hash = hash * 59 + this.JoinDate.GetHashCode();
                if (this.CancelReason != null)
                    hash = hash * 59 + this.CancelReason.GetHashCode();
                if (this.ClosedDate != null)
                    hash = hash * 59 + this.ClosedDate.GetHashCode();
                return hash;
            }
        }

        #region Operators

        public static bool operator ==(MemberInfo left, MemberInfo right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(MemberInfo left, MemberInfo right)
        {
            return !Equals(left, right);
        }

        #endregion Operators

    }
}
